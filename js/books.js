import { books } from '../db/books.js';
console.log(books);

const container = document.querySelector('.container');
const findByAuthorElement = document.querySelector('.find-by-author');
const findByGenreElement = document.querySelector('.find-by-genre');
const newestBtn = document.querySelector('.newest');
const booksCounter = document.querySelector('.books-counter');
const addBookForm = document.querySelector('.add-book-form');

findByAuthorElement.addEventListener('input', findBooksByAuthor);
findByGenreElement.addEventListener('input', filterBooksByGenre);
newestBtn.addEventListener('click', findNewestBook);
addBookForm.addEventListener('submit', addNewBook);

function createMarkup(arr) {
  return arr
    .map(
      ({ title, author, year, genre, available, image }) => `<div class="book">
      <img width=140px src="${image}" alt="${title}">
        <h2>${title}</h2>
        <h3>${author}</h3>
        <p>${year}</p>
        <p>${genre}</p>
        <span>${available ? '–î–æ—Å—Ç—É–ø–Ω–∞' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}</span>
    </div>`,
    )
    .join('');
}

container.insertAdjacentHTML('beforeend', createMarkup(books));

function findBooksByAuthor(e) {
  const userInput = e.target.value.toLowerCase().trim();
  const filteredBooks = books.filter(book =>
    book.author.toLowerCase().includes(userInput),
  );

  container.innerHTML = createMarkup(filteredBooks);
  booksCounter.textContent = `${countAvailableBooks(filteredBooks)}`;
}

function filterBooksByGenre(e) {
  const userInput = e.target.value.toLowerCase().trim();
  const filteredBooks = books.filter(book =>
    book.genre.toLowerCase().includes(userInput),
  );

  container.innerHTML = createMarkup(filteredBooks);
  booksCounter.textContent = `${countAvailableBooks(filteredBooks)}`;
}

function findNewestBook() {
  const newestBook = books.reduce(
    (newest, book) => (book.year > newest.year ? book : newest),
    books[0],
  );

  container.innerHTML = createMarkup([newestBook]);
  booksCounter.textContent = `${countAvailableBooks(filteredBooks)}`;
}

function countAvailableBooks(arr) {
  const availableBooksCount = arr.filter(book => book.available).length;
  console.log(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–Ω–∏–≥: ${availableBooksCount}`);
  return availableBooksCount;
}
booksCounter.textContent = `${countAvailableBooks(books)}`;

function addNewBook(e) {
  e.prevaentDefault();

  const title = e.target.title.value;
  const author = e.target.author.value;
  const year = Number(e.target.year.value);
  const genre = e.target.genre.value;
  const image = e.target.image.value;
  const available = e.target.available.value;

  const newBook = {
    title,
    author,
    year,
    genre,
    image,
    available
  }
  books.push(newBook)
  console.log(books);
}

// –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏, –≤—ã–ø–æ–ª–Ω—è—é—â–∏–µ —Å–ª–µ–¥—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —ç—Ç–∏–º –º–∞—Å—Å–∏–≤–æ–º:

// –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –∞–≤—Ç–æ—Ä—É: –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏–º—è –∞–≤—Ç–æ—Ä–∞
//  –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥,
// –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —ç—Ç–∏–º –∞–≤—Ç–æ—Ä–æ–º. üö©

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–Ω–∏–≥ –ø–æ –∂–∞–Ω—Ä—É: –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∂–∞–Ω—Ä–∞
//  –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ —ç—Ç–æ–≥–æ –∂–∞–Ω—Ä–∞. üö©

// –ü–æ–∏—Å–∫ –Ω–æ–≤–µ–π—à–µ–π –∫–Ω–∏–≥–∏: –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–Ω–∏–≥–∏
//  —Å —Å–∞–º—ã–º –ø–æ–∑–¥–Ω–∏–º –≥–æ–¥–æ–º –∏–∑–¥–∞–Ω–∏—è. üö©

// –ü–æ–¥—Å—á–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥: –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥,
//  –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –≤—ã–¥–∞—á–∏. üö©

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏: –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–Ω–∏–≥–∏
//  –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤.

// –í–∞—à –∫–æ–¥ —Ç—É—Ç

// –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
// console.log(findBooksByAuthor("–î–∂. –†. –†. –¢–æ–ª–∫—ñ–Ω"));
// console.log(filterBooksByGenre("–§–µ–Ω—Ç–µ–∑—ñ"));
// console.log(findNewestBook());
// console.log(countAvailableBooks());
// addNewBook({
//   title
//   author
//   year
//   genre
//   available
// });
// console.log(books);
